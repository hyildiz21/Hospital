@using Hospital.DB.Model
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    List<string> Iller=ViewData["Iller"] as List<string>;

    List<Polyclinic> polyclinics=ViewData["policlinics"] as List<Polyclinic>;

    List<Doctor> doctors=ViewData["doctors"] as List<Doctor>;
}
@*hasta kayıt ekranı için önce form tagı sonra da inputlar
*@


@*CSS*@
@*<head>
    <style>
        div {
            background-color:darkgreen;
            }
    </style>
</head>*@


<body onload="GetDoctor()">
<form>
    
<div class="row col-12">

    <div class="col-6">
        
        @*tc*@
        <div class="row col-12" @*style="color:black; padding:50px;"*@>
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> TC NO: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " type="text" name="tc" id="tc" pattern="[0-9]{11}" title="İstenilen bilgi 11 haneli sayı" onblur="GetInfo()"> </div>
        </div>

        @*isim*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> AD: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " type="text" name="name" id="name"/> </div>   
        </div>

        @*soyad*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> SOYAD: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " type="text" name="surname" id="surname"/> </div>
        </div>

        @*Telefona özel regex*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Telefon No: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " type="text" name="phone" id="phone" placeholder="1231231234" pattern="[0-9]{10}" /> </div>
        </div>

        @*e-mail*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Mail: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " type="email" name="mail" id="mail" /> </div>
        </div>
       
        @*doğum tarihi*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Doğum Tarihi: </label> </div>
            <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; "  type="date" name="birthDate" id="birthDate" onblur="GetAge()" required /> </div>
        </div>

        @*yaşı gösteren input*@
        <div style="margin-top:10px" class="row col-12">
             <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Yaş: </label> </div>
             <div class="col-9"> <input style="font-size:120%; font-family:times; text-align:center; " name="patientType" id="patientType" onchange="GetAge()" /> </div>
        </div>

        @*doğum yeri*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Doğum Yeri: </label> </div>
            <div class="col-9"> 
                <select style="font-size:120%; font-family:times" name="birthplace" id="birthPlace"> @*bunu kod kısmında yazabilirz*@
                    @foreach (var eleman in Iller)
                    {
                        <option value="none" selected disabled hidden style="font-size:120%; font-family:times; text-align:center; "> İl Seçiniz </option>

                        <option value="@eleman" style="font-size:100%; font-family:times; text-align:center; "> @eleman</option>
                    }                    
                </select>
            </div>
        </div>

       @* Adres bilgisini input yerine textarea*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Adres: </label> </div>
            <div class="col-9">
                <textarea style="font-size:120%; font-family:times; text-align:center; " name="adress" id="adress" rows="5"></textarea>
            </div>
        </div>

        @*şikayet alanı*@
        <div style="margin-top:10px" class="row col-12"> 
        <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Şikayet Bilgisi: </label> </div>
        <div class="col-9"> 
            <textarea style="font-size:120%; font-family:times; text-align:center; " id="complaint" name="complaint" rows="4">  </textarea> 
        </div>
        </div>

        @*sigorta bilgisini içeren div*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Sigorta Bilgisi: </label> </div>
            <div class="col-9" >
                <input style="font-size:120%; font-family:times; text-align:center; " name="insurance" id="insurance" rows="8"/>
            </div>
        </div>

        <br />

        @*name kısımları sqldeki columnlarla aynı olmalı çünkü çakıştıralım*@
        @*Randevu*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Randevu Tarihi: </label> </div>
            <div class="col-9">
                <input style="font-size:120%; font-family:times; text-align:center; " type="datetime-local" name="date" id="date"/>
            </div>
        </div>

        @*select te onchange ile metot çağırdık metodu en altta yazdık js ile*@
        @*poliklinikler*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Poliklinikler: </label> </div>
            <div class="col-9">
                <select style="font-size:120%; font-family:times" name="polyclinicId" id="polyclinicId" onchange="GetDoctor()" >
                    <option value="0" style="font-size:100%; font-family:times; text-align:center; "> Poliklinik Seçiniz:</option>
                    @*bunu kod kısmında yazabilirz*@
                    @foreach (var eleman in polyclinics)
                    {
                        @*<option value="none" selected disabled hidden> Poliklinik Seçiniz </option>*@
                        @*arkaplanda yani value da id görünürde name basılcak seçtiğimizde idsini seçmiş oluoz*@
                        <option value="@eleman.id" style="font-size:100%; font-family:times; text-align:center; "> @eleman.name</option>
                    }
                </select>
            </div>
        </div>

       @*doktor*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Doktor: </label> </div>
            <div class="col-9">
                <select style="font-size:120%; font-family:times; text-align:center; " name="doctorId" id="doctorId" onchange="GetDoctorCost()"> @*doktor değişince ücreti değişen fonk onchangede*@
                    @*bunu kod kısmında yazabilirz*@
                    
                    @foreach (var eleman in doctors)
                    {
                        @*arkaplanda yani value da id görünürde name basılcak seçtiğimizde idsini seçmiş oluoz*@
                        @*default değer*@
                        @*<option value="none" selected disabled hidden>Doktor Seçiniz</option>*@
                        <option value="@eleman.id" style="font-size:120%; font-family:times; text-align:center; "> @eleman.name @eleman.surname</option>
                    }
                </select>
            </div>
        </div>

       @*doktor odası adresi*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; ">Oda Adresi: </label> </div>
            <div class="col-9">
                <input style="font-size:120%; font-family:times; text-align:center; " name="doctorRoom" id="doctorRoom" rows="8" />
            </div>
        </div>
        
        @*doktor ücreti*@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"> <label style="font-size:120%; font-family:times; text-align:center; "> Doktor Ücreti: </label> </div>
                <div class="col-9">
                    <input style="font-size:120%; font-family:times; text-align:center; " name="doctorCost" id="doctorCost" rows="8" />
                </div>
        </div>

        @*sonraki hasta butonu *@
        <div style="margin-top:10px" class="row col-12">
            <div class="col-3"></div>
            <div class="col-9">
                <button style="margin-top:20px; text-align:center; " class="btn btn-outline-info"  asp-controller="Patient" asp-action="Save"> Sonraki Hastaya Geç</button>
            </div>

    </div>

    </div>


    <div class="col-6">
        <table style="font-size:120%; border-block-color:goldenrod; font-family:times" id="dataTable" class="table table-hover">
            <thead>
                <tr >
                    <th>ID</th>
                    <th>Tarih</th>
                    <th>Poliklinik</th>
                    <th>Doktor</th>
                    <th>Şikayet</th>
                    <th> </th>                
                </tr>
            </thead>
            <tbody id="appointmentTr"> </tbody>
        </table>
    </div>

 </div>
</form>
</body>


<script> 

    function GetDoctorCost()
    {
        $.ajax({
            url: '@Url.Action("GetDoctorCost", "Patient")',
            type: "POST",
            data: { doctorId:document.getElementById('doctorId').value }, //karşıya docId gönderioz.!!!!
            success: function (data) {
                if(data==null)
                {
                    document.getElementById('doctorCost').disabled = true;
                    document.getElementById('doctorCost').value = "Doktor ücret bilgisi bulunmuyor.";
                    document.getElementById('doctorCost').style.backgroundColor = "grey";
                    document.getElementById('doctorCost').style.color="white";
                }
                else
                {
                    //insurance kısmındaki gibi doldurucaz.
                    if(document.getElementById('insurance').value=="Sigortalı") //sigortalı ise doktor ücreti önemli if kontrolü
                    {
                        document.getElementById('doctorCost').disabled = true;
                        document.getElementById('doctorCost').value = data.titleAmount-350;
                        document.getElementById('doctorCost').style.backgroundColor = "green";
                        document.getElementById('doctorCost').style.color="white";
                    }
                    else //sigortasız ise doktor ücreti
                    {
                        document.getElementById('doctorCost').disabled = true;
                        document.getElementById('doctorCost').value = data.titleAmount;
                        document.getElementById('doctorCost').style.backgroundColor = "red";
                        document.getElementById('doctorCost').style.color = "white";
                    }
                }
            }
           
        });
    }

    function GetDoctor()
    {
        $.ajax({

            url: '@Url.Action("GetDoctor", "Patient")',
            type:"POST",
            data:{polyclinicId: document.getElementById('polyclinicId').value},
            //bu metot başarılı olursa bize dönüş yapan doktorlar=data--- item ın altında data onun altında da doktor
            success: function(data){
                $('#doctorId').find('option').remove();
                if(data.length==0){
                    if (document.getElementById('polyclinicId').value=="0")
                    {
                        select = document.getElementById('doctorId');

                        var opt = document.createElement('option');

                        opt.value = 0;
                        opt.innerHTML = "Öncelikle poliklinik bölümü seçiniz";
                        select.appendChild(opt);
                    }
                    else
                    {
                        select = document.getElementById('doctorId');

                        var opt = document.createElement('option');

                        opt.value = 0;
                        opt.innerHTML = "Bu bölümde doktor bulunmamaktadır.";
                        select.appendChild(opt);
                    }
                }
                $.each(data, function(i,item)
                {
                    select=document.getElementById('doctorId');
                    
                    var opt=document.createElement('option');

                    opt.value=[item.id];
                    opt.innerHTML=[item.name] + " " + [item.surname];
                    select.appendChild(opt);
               
            
                }

            );
                GetDoctorCost();
                GetDoctorRoom();
            }
            //error: function () 
            //{
            //    $('doctorId').find('option').remove();
            //}
        });
        

    }

    //tc nin çıkışında çalışcak 2 metot
    function GetInfo()
    {
        GetAppointment();
        GetPatient();
        GetInsurance();
        GetDoctorCost();
        GetAge();
        GetDoctorRoom();
    }

    function GetInsurance()
    {
        var tc=document.getElementById('tc').value;
        $.ajax({
                url: '@Url.Action("GetInsurance", "Patient")',
                type: "POST",
                data: {tc: tc},
                success: function(data){
                if(data==null)
                {
                     document.getElementById('insurance').disabled=true;
                     document.getElementById('insurance').value="Sigorta bilgisi bulunmuyor.";
                     document.getElementById('insurance').style.backgroundColor="grey";
                     document.getElementById('insurance').style.color="white";
                }
                else
                {
                    if(data.insurancesStatus)
                    {
                        document.getElementById('insurance').disabled = true;
                        document.getElementById('insurance').value="Sigortalı";
                        document.getElementById('insurance').style.backgroundColor = "green";
                        document.getElementById('insurance').style.color = "white";
                    }
                    else
                    {
                        document.getElementById('insurance').disabled = true;
                        document.getElementById('insurance').value = "Sigortasız";
                        document.getElementById('insurance').style.backgroundColor = "red";
                        document.getElementById('insurance').style.color="white";
                    }
                }
            }
            });

    }
  
    function GetAppointment()
    {
        var tc= document.getElementById('tc').value;
        $.ajax({
            url: '@Url.Action("GetAppointment", "Patient")',
            type: "POST",
            data: {tc: tc},
            success: function(data){
                $('#dataTable').DataTable().rows().remove().draw();
                //eğer data boş değilse hastanın randevu bilgilerini ekrana ver else gerek yok çünkü
                //227. satırda zaten remove luyoruz.
                if(data!=null)
                {
                $.each(data, function(i, item){
                    var date = 
                    [item.date.split('T')[0].split('-')[2]] + '.' + 
                    [item.date.split('T')[0].split('-')[1]] + '.' + 
                    [item.date.split('T')[0].split('-')[0]] + ' Saat: ' +
                    [item.date.split('T')[1].split(':')[0]] + ':' + 
                    [item.date.split('T')[1].split(':')[1]];

                    if(new Date([item.date]) < new Date()) // geçmiş tarihli randevuların tıklanmasını istemiyoruzç
                    {
                        $('#dataTable').DataTable().row.add($('<tr style="background-color:lightblue">' +
                        '<td>' + [item.id] + '</td>' +
                        '<td>' + date + '</td>' +
                        '<td>' + [item.polyclinicName] + '</td>' +
                        '<td>' + [item.doctorNameSurname] + '</td>' +
                        '<td>' + [item.complaint] + '</td>' +
                        '<td> </td > ' +
                        '</tr>')).draw();
                    }
                    
                   else
                    {
                        //hata olabilir..
                        $('#dataTable').DataTable().row.add($('<tr>' +
                        '<td>' + [item.id] + '</td>' +
                        '<td>' + date + '</td>' +
                        '<td>' + [item.polyclinicName] + '</td>' +
                        '<td>' + [item.doctorNameSurname] + '</td>' +
                        '<td>' + [item.complaint] + '</td>' +
                        '<td> <a onclick="GetSelected(' + [item.id] + ',\'' + [item.date] + '\',\'' + [item.polyclinicId] + '\',\'' + [item.polyclinicName] + '\',\'' +
                         [item.doctorId] + '\',\'' +[item.doctorNameSurname]+'\',\''+[item.complaint]+'\');" > <i class="bi bi-arrow-down-square-fill"></i> </a> </td > ' +'</tr>')).draw();
                    }
                    
                    
                });

                $("#dataTable").DataTable().order([1, 'desc']).draw(); //datatabledaki tarihleri sıralama controllerdan alınan.
                }
                GetAge();
            }

        });
    }

    //hasta ve randevu bilgilerini ikiye ayırdık yukarda getinfoda birlikte çalıştırcaz
    function GetPatient()
    {

        var tc=document.getElementById('tc').value;
        $.ajax(
            {
                url: '@Url.Action("GetPatient","Patient")',
                type: "POST",
                data: {tc: tc},
                success: function(data)
                {

                    //document.getElementById('complaint').disabled = false;
                    //document.getElementById('complaint').value = x;

                    //HASTA İÇİN
                    //textboxların datanın boş veya dolu olmasına göre aktif ve boş olma durumları için if kontrolü
                    if(data==null) //yeni tc ile kayıt olursa
                    {
                        //ekrana yazdıktan sonra aktif
                        document.getElementById('name').disabled = false;
                        document.getElementById('surname').disabled = false;
                        document.getElementById('phone').disabled = false;
                        document.getElementById('mail').disabled = false;
                        document.getElementById('birthDate').disabled = false;;
                        document.getElementById('birthPlace').disabled = false;
                        document.getElementById('adress').disabled = false;
                        

                        //textbox içindeki alanları boşaltma
                        document.getElementById('name').value = "";
                        document.getElementById('surname').value = "";
                        document.getElementById('phone').value = "";
                        document.getElementById('mail').value = "";
                        document.getElementById('birthDate').value = "";
                        document.getElementById('birthPlace').value = "";
                        document.getElementById('adress').value = "";
                        

                    }
                    else
                    {
                        document.getElementById('name').value = data.name;
                        document.getElementById('surname').value = data.surname;
                        document.getElementById('phone').value = data.phone;
                        document.getElementById('mail').value = data.mail;
                        document.getElementById('birthDate').value = data.birthDate.split('T')[0];
                        document.getElementById('birthPlace').value = data.birthPlace;
                        document.getElementById('adress').value = data.adress;



                        //ekrana yazdıktan sonra deaktif
                        document.getElementById('name').disabled = true;
                        document.getElementById('surname').disabled = true;
                        document.getElementById('phone').disabled = true;
                        document.getElementById('mail').disabled = true;
                        document.getElementById('birthDate').disabled = true;;
                        document.getElementById('birthPlace').disabled = true;
                        document.getElementById('adress').disabled = true;


                    }

                    //if(document.getElementById('complaint').value!=null)
                    //{
                    //document.getElementById('complaint').disabled = false;
                    //document.getElementById('complaint').value = x;
                    //}
                    //else
                    //{
                    //document.getElementById('complaint').disabled = true;
                    //document.getElementById('complaint').value = "";
                    //}

                    GetAge();

                    //document.getElementById('name').readOnly=true;


                }
            });
    }

    //yukarıya id ve tarih parametresi gönderdik a nın içine GetAppointmentda
    function GetSelected(id, date, polyclinicId, polyclinicName, doctorId, doctorNameSurname, complaint) {
        
        document.getElementById('date').value=date;
        //acmak lazım üstteki için? document.getElementById('complaint').value = complaint;
       

        if (document.getElementById('complaint').value !=null)
        {
          document.getElementById('complaint').value=complaint;
          document.getElementById('complaint').disabled = true;
        }


        //HATALI KOD
        //select = document.getElementById('polyclinicId');
        //var opt = document.createElement('option');
        ////option ı oluşturduk ve seçicez yani kayıtlı olan(randevudaki) polyclinici ekrana yazdırıcaz opt nin selected metodu ama her seferinde seçili bölümü bi daha eklio ÇÖZZZ!
        //opt.value = polyclinicId;
        //opt.innerHTML = polyclinicName;
        //opt.selected = "selected"
        //select.appendChild(opt);

        //polyclinicId sinin indexini valuesunu bulcaz. -value dan indexi çekebiliriz-
        select = document.getElementById('polyclinicId');
        var opt=select.options;

        //optionslar içinde döndüm ve polyId si eşit olanı getirdim ekrana
        $.each(opt, function (i, item)
        {
            if(item.value==polyclinicId)
            {
                select.options.selectedIndex=item.index;
            }

        });

        GetDoctor();

        //tıklaya icona basınca aynı olayı doctor için de istiyorum tabi yukarda id ve namelerini parametre olarak verip "a" da basmam gerek
        select = document.getElementById('doctorId');
        var opt = document.createElement('option');

        opt.value = doctorId;
        opt.innerHTML = doctorNameSurname;
        opt.selected = "selected";
        select.appendChild(opt);
    }

    function GetAge(birthDate)
    {
        var birthdate = document.getElementById('birthDate').value;
        var x= new Date(birthdate);
        var yearThen = x.getFullYear();
        var monthThen = x.getMonth();
        var dayThen = x.getDate();

        var today = new Date();
        var birthday = new Date(yearThen, monthThen - 1, dayThen);
        var differenceInMilisecond = today.valueOf() - birthday.valueOf();
        var year_age = Math.floor(differenceInMilisecond / 31536000000);

        document.getElementById("patientType").innerHTML = year_age;




        if (year_age == null)
        {
          document.getElementById('patientType').disabled = true;
          document.getElementById('patientType').value = "";
          document.getElementById('patientType').style.backgroundColor = "grey";
          document.getElementById('patientType').style.color = "white";



        }
        else
        {

            if (year_age < 65)
            {
                            
                document.getElementById('patientType').disabled = true;
                document.getElementById('patientType').value = "öncelikli hasta değildir.";
                document.getElementById('patientType').style.backgroundColor = "indianred";
                document.getElementById('patientType').style.color = "white";


                
            }
            else
            {
                //65 yaşından büyük olanlar
                document.getElementById('patientType').disabled = true;
                document.getElementById('patientType').value = "öncelikli hasta";
                document.getElementById('patientType').style.backgroundColor = "lightskyblue";
                document.getElementById('patientType').style.color = "white";

            }
        }



                
        


    }

    function GetDoctorRoom()
    {
        //doctor odalarını getirecek func her doktor değiştiğinde ekrandaki oda değişmesini istiyoruz.

        $.ajax(
            {
                url: '@Url.Action("GetDoctorRoom","Patient")',
                type: "POST",
                data: { doctorId: document.getElementById('doctorId').value },
                success: function (data)
                {
                    if(data==null)
                    {
                        document.getElementById('doctorRoom').disabled = true;
                        document.getElementById('doctorRoom').value = "Oda Belirlenmemiş";
                        document.getElementById('doctorRoom').style.backgroundColor = "grey";
                        document.getElementById('doctorRoom').style.color = "white";
                    }
                    else
                    {
                        document.getElementById('doctorRoom').disabled = true;
                        document.getElementById('doctorRoom').value = data.address;
                        document.getElementById('doctorRoom').style.backgroundColor = "lightblue";
                        document.getElementById('doctorRoom').style.color = "white";
                    }
                }
            });

    }
</script>